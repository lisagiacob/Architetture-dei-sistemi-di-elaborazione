


ARM Macro Assembler    Page 1 


    1 00000000         ;int translate_morse(char* vett_input, int vet_input_len
                       ght, char* vett_output, int vet_output_lenght, char chan
                       ge_symbol, char space, char sentence_end);
    2 00000000                 AREA             word, DATA, READWRITE
    3 00000000 00 00 00 
              00 00 00 
              00 00    w_code  space            8
    4 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       word_final
                               space            100
    5 0000006C         
    6 0000006C                 AREA             morse, DATA, READONLY
    7 00000000 54 01   w_Lenght_1
                               DCB              "T", 2_1
    8 00000002 45 00           DCB              "E", 2_0
    9 00000004 41 01   w_Lenght_2
                               DCB              "A", 2_01
   10 00000006 49 00           DCB              "I", 2_00
   11 00000008 4D 03           DCB              "M", 2_11
   12 0000000A 4E 02           DCB              "N", 2_10
   13 0000000C 44 04   w_Lenght_3
                               DCB              "D", 2_100
   14 0000000E 47 06           DCB              "G", 2_110
   15 00000010 4B 05           DCB              "K", 2_101
   16 00000012 4F 07           DCB              "O", 2_111
   17 00000014 52 02           DCB              "R", 2_010
   18 00000016 53 00           DCB              "S", 2_000



ARM Macro Assembler    Page 2 


   19 00000018 55 01           DCB              "U", 2_001
   20 0000001A 57 03           DCB              "W", 2_011
   21 0000001C 42      w_Lenght_4
                               DCB              "B"
   22 0000001D 00 00 10        DCW              0x1000
   23 00000020 43              DCB              "C"
   24 00000021 00 10 10        DCW              0x1010
   25 00000024 46              DCB              "F"
   26 00000025 00 10 00        DCW              0x0010
   27 00000028 48 00           DCB              "H", 2_0000
   28 0000002A 4A 07           DCB              "J", 2_0111
   29 0000002C 4C 04           DCB              "L", 2_0100
   30 0000002E 50 06           DCB              "P", 2_0110
   31 00000030 51 0D           DCB              "Q", 2_1101
   32 00000032 56 01           DCB              "V", 2_0001
   33 00000034 58 09           DCB              "X", 2_1001
   34 00000036 59 0B           DCB              "Y", 2_1011
   35 00000038         ;DCB  "Z", 2_1100
   36 00000038 31 0F   w_Lenght_5
                               DCB              "1", 2_01111
   37 0000003A 32 07           DCB              "2", 2_00111
   38 0000003C 33 03           DCB              "3", 2_00011
   39 0000003E 34 01           DCB              "4", 2_00001
   40 00000040 35 00           DCB              "5", 2_00000
   41 00000042 36 10           DCB              "6", 2_10000
   42 00000044 37 18           DCB              "7", 2_11000
   43 00000046 38 1C           DCB              "8", 2_11100
   44 00000048 39 1E           DCB              "9", 2_11110
   45 0000004A 30 1F           DCB              "0", 2_11111
   46 0000004C         
   47 0000004C                 AREA             asm_functions, CODE, READONLY
   48 00000000                 EXPORT           translate_morse
   49 00000000         
   50 00000000        0 
                       inVA    rn               0
   51 00000000        2 
                       outVA   rn               2
   52 00000000        4 
                       t2      rn               4
   53 00000000        5 
                       t3      rn               5
   54 00000000        6 
                       t4      rn               6
   55 00000000        8 
                       len     rn               8
   56 00000000        A 
                       wB      rn               10
   57 00000000        1 
                       w_LA    rn               1
   58 00000000         
   59 00000000         translate_morse
   60 00000000         ;save current SP to faster access to data in the stack
   61 00000000 46EC            mov              r12, sp
   62 00000002         ;save volatile registers
   63 00000002 E92D 4DF0       stmfd            sp!, {r4-r8, r10-r11, lr}
   64 00000006 F8DC 4000       ldr              r4, [r12]   ;2
   65 0000000A F8DC 5004       ldr              r5, [r12, #4]
   66 0000000E F8DC 6008       ldr              r6, [r12, #8]
   67 00000012 F04F 0800       mov              r8, #0      ;lunghezza codice l



ARM Macro Assembler    Page 3 


                                                            ettera
   68 00000016         
   69 00000016         count
   70 00000016 F810 AB01       ldrb             r10, [inVA], #1 ;metto in r10 i
                                                            l byte
   71 0000001A         
   72 0000001A         ;salvo in w_code il byte letto
   73 0000001A F8DF B07C       ldr              r11, =w_code
   74 0000001E 46D1            mov              r9, wB
   75 00000020         
   76 00000020         ;comparo il byte del codice carattere con i byte "specia
                       li" 
   77 00000020 45A2            cmp              wB, t2
   78 00000022 D008            beq              wordCode
   79 00000024 45AA            cmp              wB, t3
   80 00000026 D006            beq              wordCode
   81 00000028 45B2            cmp              wB, t4
   82 0000002A D004            beq              wordCode
   83 0000002C         
   84 0000002C F80B AB01       strb             wB, [r11], #1
   85 00000030         
   86 00000030 F108 0801       add              len, len, #1 ;incremento la lun
                                                            ghezza del codice p
                                                            arola
   87 00000034         
   88 00000034 E7EF            b                count
   89 00000036         
   90 00000036         wordCode                             ; abbiamo letto tut
                                                            to il codice letter
                                                            a
   91 00000036 F8DF B060       ldr              r11, =w_code
   92 0000003A F8DB 3000       ldr              r3, [r11]
   93 0000003E         
   94 0000003E F1B8 0F01       cmp              len, #1
   95 00000042 BF08 4915       ldreq            w_LA, =w_Lenght_1
   96 00000046 F1B8 0F02       cmp              len, #2
   97 0000004A BF08 4914       ldreq            w_LA, =w_Lenght_2
   98 0000004E F1B8 0F03       cmp              len, #3
   99 00000052 BF08 4913       ldreq            w_LA, =w_Lenght_3
  100 00000056 F1B8 0F04       cmp              len, #4
  101 0000005A BF08 4912       ldreq            w_LA, =w_Lenght_4
  102 0000005E F1B8 0F05       cmp              len, #5
  103 00000062 BF08 4911       ldreq            w_LA, =w_Lenght_5
  104 00000066         
  105 00000066         
  106 00000066         ; reinizializzo la lunghezza per la prossima lettera
  107 00000066 F04F 0800       mov              len, #0
  108 0000006A         
  109 0000006A         L
  110 0000006A 680F            ldr              r7, [w_LA]
  111 0000006C EA4F 3717       lsr              r7, #12     ; shifto a destra i
                                                            n modo da avere il 
                                                            solo codice caratte
                                                            re e eliminare i ca
                                                            rattere in se
  112 00000070 429F            cmp              r7, r3      ;compare tra word l
                                                            etta da vett_input 
                                                            e quella morse
  113 00000072         ; se non coincidono passo a confrontare il codice parola



ARM Macro Assembler    Page 4 


                        sucessivo
  114 00000072 BF18 3108       addne            w_LA, w_LA, #8 ;aggiungo 8 all'
                                                            address del registr
                                                            o per passare al co
                                                            dice lettera sucess
                                                            ivo
  115 00000076 D1F8            bne              L
  116 00000078         
  117 00000078 F1A1 0104       sub              w_LA, w_LA, #4
  118 0000007C 680F            ldr              r7, [w_LA]
  119 0000007E F8DF 8030       ldr              r8, =word_final
  120 00000082 F8C8 7001       str              r7, [r8, #1]
  121 00000086         ;controllo l'ultimo carattere letto e in base a quello s
                       alto
  122 00000086 45A1            cmp              r9, t2
  123 00000088 D003            beq              C2
  124 0000008A 45A9            cmp              r9, t3
  125 0000008C D001            beq              C3
  126 0000008E 45B1            cmp              r9, t4
  127 00000090 D0FF            beq              C4
  128 00000092         
  129 00000092         C2
  130 00000092         
  131 00000092         C3
  132 00000092         C4
  133 00000092         
  134 00000092 E8BD 8DF0       ldmfd            sp!, {r4-r8, r10-r11, pc}
  135 00000096                 end
              00 00 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\translate_morse.d -o.\translate_morse.o -I.\RTE\_Target_1 -IC:\U
sers\Lisa\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users
\Lisa\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.0\Device\Include --predefine
="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SE
TA 1" --predefine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\trans
late_morse.lst translate_morse.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

w_code 00000000

Symbol: w_code
   Definitions
      At line 3 in file translate_morse.s
   Uses
      At line 73 in file translate_morse.s
      At line 91 in file translate_morse.s

word 00000000

Symbol: word
   Definitions
      At line 2 in file translate_morse.s
   Uses
      None
Comment: word unused
word_final 00000008

Symbol: word_final
   Definitions
      At line 4 in file translate_morse.s
   Uses
      At line 119 in file translate_morse.s
Comment: word_final used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

morse 00000000

Symbol: morse
   Definitions
      At line 6 in file translate_morse.s
   Uses
      None
Comment: morse unused
w_Lenght_1 00000000

Symbol: w_Lenght_1
   Definitions
      At line 7 in file translate_morse.s
   Uses
      At line 95 in file translate_morse.s
Comment: w_Lenght_1 used once
w_Lenght_2 00000004

Symbol: w_Lenght_2
   Definitions
      At line 9 in file translate_morse.s
   Uses
      At line 97 in file translate_morse.s
Comment: w_Lenght_2 used once
w_Lenght_3 0000000C

Symbol: w_Lenght_3
   Definitions
      At line 13 in file translate_morse.s
   Uses
      At line 99 in file translate_morse.s
Comment: w_Lenght_3 used once
w_Lenght_4 0000001C

Symbol: w_Lenght_4
   Definitions
      At line 21 in file translate_morse.s
   Uses
      At line 101 in file translate_morse.s
Comment: w_Lenght_4 used once
w_Lenght_5 00000038

Symbol: w_Lenght_5
   Definitions
      At line 36 in file translate_morse.s
   Uses
      At line 103 in file translate_morse.s
Comment: w_Lenght_5 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

C2 00000092

Symbol: C2
   Definitions
      At line 129 in file translate_morse.s
   Uses
      At line 123 in file translate_morse.s
Comment: C2 used once
C3 00000092

Symbol: C3
   Definitions
      At line 131 in file translate_morse.s
   Uses
      At line 125 in file translate_morse.s
Comment: C3 used once
C4 00000092

Symbol: C4
   Definitions
      At line 132 in file translate_morse.s
   Uses
      At line 127 in file translate_morse.s
Comment: C4 used once
L 0000006A

Symbol: L
   Definitions
      At line 109 in file translate_morse.s
   Uses
      At line 115 in file translate_morse.s
Comment: L used once
asm_functions 00000000

Symbol: asm_functions
   Definitions
      At line 47 in file translate_morse.s
   Uses
      None
Comment: asm_functions unused
count 00000016

Symbol: count
   Definitions
      At line 69 in file translate_morse.s
   Uses
      At line 88 in file translate_morse.s
Comment: count used once
translate_morse 00000000

Symbol: translate_morse
   Definitions
      At line 59 in file translate_morse.s
   Uses
      At line 48 in file translate_morse.s
Comment: translate_morse used once
wordCode 00000036

Symbol: wordCode



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 90 in file translate_morse.s
   Uses
      At line 78 in file translate_morse.s
      At line 80 in file translate_morse.s
      At line 82 in file translate_morse.s

8 symbols
361 symbols in table
